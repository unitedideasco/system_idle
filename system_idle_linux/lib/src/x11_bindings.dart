// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Provides bindings to the XCB-based idle detection (`src/x11.h`)
///
/// To regenerate, run `dart run ffigen --config x11-ffigen.yaml`
class SystemIdleX11Bindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SystemIdleX11Bindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SystemIdleX11Bindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<X11Plugin> createPlugin() {
    return _createPlugin();
  }

  late final _createPluginPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<X11Plugin> Function()>>(
          'createPlugin');
  late final _createPlugin =
      _createPluginPtr.asFunction<ffi.Pointer<X11Plugin> Function()>();

  void freePlugin(
    ffi.Pointer<X11Plugin> ptr,
  ) {
    return _freePlugin(
      ptr,
    );
  }

  late final _freePluginPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<X11Plugin>)>>(
          'freePlugin');
  late final _freePlugin =
      _freePluginPtr.asFunction<void Function(ffi.Pointer<X11Plugin>)>();

  bool initPlugin(
    ffi.Pointer<X11Plugin> ptr,
  ) {
    return _initPlugin(
      ptr,
    );
  }

  late final _initPluginPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(ffi.Pointer<X11Plugin>)>>(
          'initPlugin');
  late final _initPlugin =
      _initPluginPtr.asFunction<bool Function(ffi.Pointer<X11Plugin>)>();

  int getIdleTime(
    ffi.Pointer<X11Plugin> ptr,
  ) {
    return _getIdleTime(
      ptr,
    );
  }

  late final _getIdleTimePtr =
      _lookup<ffi.NativeFunction<ffi.Uint32 Function(ffi.Pointer<X11Plugin>)>>(
          'getIdleTime');
  late final _getIdleTime =
      _getIdleTimePtr.asFunction<int Function(ffi.Pointer<X11Plugin>)>();
}

final class X11Plugin extends ffi.Opaque {}
